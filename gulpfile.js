var gulp = require("gulp"),
    bower = require("gulp-bower"),
    elixir = require('laravel-elixir');

gulp.task('bower', function() {
    return bower();
});

/*
 |--------------------------------------------------------------------------
 | Elixir Asset Management
 |--------------------------------------------------------------------------
 |
 | Elixir provides a clean, fluent API for defining some basic Gulp tasks
 | for your Laravel application. By default, we are compiling the Less
 | file for our application, as well as publishing vendor resources.
 |
 */

var paths = {
    'jquery': 'jquery-legacy/dist',
    'bootstrap': 'bootstrap-sass/assets',
    'bootswatch': 'bootswatch',
    'fontawesome': 'font-awesome',
    'metisMenu': 'metisMenu/dist',
    'colorbox': 'jquery-colorbox',
    'dataTables': 'datatables/media',
    'dataTablesBootstrap3Plugin': 'datatables-bootstrap3-plugin/media'
};

elixir.config.sourcemaps = false;

elixir(function (mix) {

    // Run bower install
    mix.task('bower');
    var dtPluginsDir = 'bower_components/datatables-plugins/';

    // Copy fonts straight to public
    mix.copy(
        'bower_components/' + paths.bootstrap + '/fonts/bootstrap/**',
        'public/fonts'
    ).copy(
        'bower_components/' + paths.fontawesome + '/fonts/**',
        'public/fonts'
    )
    //    .copy(
    //    'bower_components/bootstrap/dist/fonts',
    //    'public/fonts'
    //)

    // Copy images straight to public
    mix.copy(
        'bower_components/' + paths.colorbox + '/example3/images/**',
        'public/img'
    ).copy(
        'bower_components/lightbox/img/**',
        'public/img'
    );

    // Compile SASS and output to default resource directory
    mix.sass('app.scss', 'public/assets/css', {
        includePaths: [
            'bower_components/' + paths.bootstrap + '/stylesheets/',
            'bower_components/' + paths.bootswatch + '/',
            'bower_components/' + paths.fontawesome + '/scss/',
            'bower_components/lightbox/sass/'
        ]
    });

    // Merge CSSs
    mix.styles([
        '../bower_components/' + paths.colorbox + '/example3/colorbox.css',
        '../bower_components/' + paths.dataTablesBootstrap3Plugin + '/css/datatables-bootstrap3.css',
        '../bower_components/' + paths.metisMenu + '/metisMenu.css',
        'assets/css/app.css' // app.css is generated by sass and has some overrides
    ], 'public/css/all.css', 'resources/');

    // Merge scripts
    mix.scripts([
        paths.jquery + '/jquery.js',
        paths.bootstrap + '/javascripts/bootstrap.js',
        paths.dataTables + '/js/jquery.dataTables.js',
        paths.dataTablesBootstrap3Plugin + '/js/datatables-bootstrap3.js',
        paths.colorbox + '/jquery.colorbox.js',
        paths.metisMenu + '/metisMenu.js'
    ], 'public/js/all.js', 'bower_components/');

    // Cache-bust all.css and all.js
    mix.version([
        'public/css/all.css',
        'public/js/all.js'
    ]);

});
